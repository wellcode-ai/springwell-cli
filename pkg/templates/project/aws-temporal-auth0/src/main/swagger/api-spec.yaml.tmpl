openapi: 3.0.3
info:
  title: {{name}} API
  description: API documentation for {{name}}
  version: 1.0.0
  contact:
    name: Development Team
  license:
    name: Private
servers:
  - url: /api
    description: API base path
tags:
  - name: Health
    description: Health check endpoints
  - name: Auth
    description: Authentication endpoints
  - name: Orders
    description: Order management endpoints
paths:
  /health:
    get:
      tags:
        - Health
      summary: Health check
      description: Returns the health status of the service
      operationId: healthCheck
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  timestamp:
                    type: string
                  service:
                    type: string
  /auth/login:
    post:
      tags:
        - Auth
      summary: User login
      description: Authenticates a user and returns a JWT token
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Successfully authenticated
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  expiresIn:
                    type: integer
        '401':
          description: Authentication failed
  /orders:
    get:
      tags:
        - Orders
      summary: Get all orders
      description: Returns a list of all orders for the authenticated user
      operationId: getOrders
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  : '#/components/schemas/Order'
        '401':
          description: Unauthorized
    post:
      tags:
        - Orders
      summary: Create a new order
      description: Creates a new order for the authenticated user
      operationId: createOrder
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              : '#/components/schemas/OrderRequest'
      responses:
        '201':
          description: Order created successfully
          content:
            application/json:
              schema:
                : '#/components/schemas/Order'
        '400':
          description: Invalid request
        '401':
          description: Unauthorized
components:
  schemas:
    Order:
      type: object
      properties:
        id:
          type: string
          format: uuid
        orderNumber:
          type: string
        status:
          type: string
          enum:
            - PENDING
            - PROCESSING
            - COMPLETED
            - CANCELLED
            - FAILED
        totalAmount:
          type: number
          format: double
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    OrderRequest:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            type: object
            properties:
              productId:
                type: string
                format: uuid
              quantity:
                type: integer
                minimum: 1
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
