version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: {{name}}-app
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/{{name}}
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - TEMPORAL_SERVICE_ADDRESS=temporal:7233
    depends_on:
      - postgres
      - temporal
    networks:
      - {{name}}-network

  postgres:
    image: postgres:13
    container_name: {{name}}-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB={{name}}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - {{name}}-network

  temporal:
    image: temporalio/auto-setup:1.18.0
    container_name: {{name}}-temporal
    ports:
      - "7233:7233"
    environment:
      - DB=postgresql
      - DB_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PWD=postgres
      - POSTGRES_SEEDS=postgres
    depends_on:
      - postgres
    networks:
      - {{name}}-network

  temporal-web:
    image: temporalio/web:1.15.0
    container_name: {{name}}-temporal-web
    ports:
      - "8088:8088"
    environment:
      - TEMPORAL_GRPC_ENDPOINT=temporal:7233
      - TEMPORAL_PERMIT_WRITE_API=true
    depends_on:
      - temporal
    networks:
      - {{name}}-network

networks:
  {{name}}-network:
    driver: bridge

volumes:
  postgres-data: 